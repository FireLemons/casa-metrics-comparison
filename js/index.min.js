function downloadToFile(e,t,a){const s=document.createElement("a"),o=new Blob([e],{type:a});s.href=URL.createObjectURL(o),s.download=t,s.click(),URL.revokeObjectURL(s.href)}function getJSON(e,t){const a=new XMLHttpRequest;a.onreadystatechange=function(){4===this.readyState&&200===this.status?t(JSON.parse(this.responseText)):4===this.readyState&&200!==this.status&&console.error(`Request to ${e} Failed`)},a.open("get",e,!0),a.send()}function makeDiff(e){const t={};for(label in e)t[label]=e[label].newValue-e[label].savedValue;return t}const app=new Vue({el:"#app",data:{orgs:{"Prince George":{"Accepted Invitations":{savedValue:0,newValue:0},"Unaccepted Invitations":{savedValue:0,newValue:0},"Cases With Mandates":{savedValue:0,newValue:0},"Case Contact Count":{savedValue:0,newValue:0},"Case Contact Count in Last 2 Weeks":{savedValue:0,newValue:0},"Users Who Have Added Case Contacts in Last 2 Weeks":{savedValue:0,newValue:0},"Notification Count":{savedValue:0,newValue:0},"Volunteers Assigned to Supervisors":{savedValue:0,newValue:0}},Montgomery:{"Accepted Invitations":{savedValue:0,newValue:0},"Unaccepted Invitations":{savedValue:0,newValue:0},"Cases With Mandates":{savedValue:0,newValue:0},"Case Contact Count":{savedValue:0,newValue:0},"Case Contact Count in Last 2 Weeks":{savedValue:0,newValue:0},"Users Who Have Added Case Contacts in Last 2 Weeks":{savedValue:0,newValue:0},"Notification Count":{savedValue:0,newValue:0},"Volunteers Assigned to Supervisors":{savedValue:0,newValue:0}}},global:{"Total Hours in Case Contacts":{savedValue:0,newValue:0}},queries:{"Accepted Invitations":"unloaded","Unaccepted Invitations":"unloaded","Cases With Mandates":"unloaded","Case Contact Count":"unloaded","Case Contact Count in Last 2 Weeks":"unloaded","Users Who Have Added Case Contacts in Last 2 Weeks":"unloaded","Notification Count":"unloaded","Total Hours in Case Contacts":"unloaded","Volunteers Assigned to Supervisors":"unloaded"}},computed:{backup:function(){const e=document.querySelector("textarea");return e.style.height=e.scrollHeight+"px",`localStorage.setItem('metrics', JSON.stringify(${JSON.stringify({orgs:this.orgs,global:this.global},null,2)}))`},diffs:function(){return{orgs:{"Prince George":makeDiff(this.orgs["Prince George"]),Montgomery:makeDiff(this.orgs.Montgomery)},global:makeDiff(this.global)}}},methods:{download:function(){downloadToFile(this.backup,"backup.js","text/plain")},save:function(){[this.orgs["Prince George"],this.orgs.Montgomery,this.global].forEach((e=>{for(stat in e)e[stat].savedValue=e[stat].newValue})),localStorage.setItem("metrics",JSON.stringify({orgs:this.orgs,global:this.global}))}},mounted:function(){const e=JSON.parse(localStorage.getItem("metrics"));if(e){for(orgName in this.orgs)this.orgs[orgName]=Object.assign(this.orgs[orgName],e.orgs[orgName]);this.global=Object.assign(this.global,e.global)}getJSON("https://data.heroku.com/dataclips/idfolumrbaubogbmewdoeyahhdtj.json",(e=>{const t="Case Contact Count";e.values.forEach((e=>{let a;switch(e[0]){case 1:a="Prince George";break;case 2:a="Montgomery"}a&&(this.orgs[a][t].newValue=e[1])})),this.queries[t]="loaded"})),getJSON("https://data.heroku.com/dataclips/ymbdlyldhiiqcmsslbjfjdjmzwco.json",(e=>{const t="Volunteers Assigned to Supervisors";e.values.forEach((e=>{let a;switch(e[0]){case 1:a="Prince George";break;case 2:a="Montgomery"}a&&(this.orgs[a][t].newValue=e[1])})),this.queries[t]="loaded"})),getJSON("https://data.heroku.com/dataclips/xsikhducnqfdrmfcntvdhtehuuwp.json",(e=>{const t="Notification Count";e.values.forEach((e=>{let a;switch(e[0]){case 1:a="Prince George";break;case 2:a="Montgomery"}this.orgs[a][t].newValue=e[1]})),this.queries[t]="loaded"})),getJSON("https://data.heroku.com/dataclips/fairemyutljnkjgwldlaqtpecvvt.json",(e=>{const t="Cases With Mandates";e.values.forEach((e=>{let a;switch(e[0]){case 1:a="Prince George";break;case 2:a="Montgomery"}this.orgs[a][t].newValue=e[1]})),this.queries[t]="loaded"})),getJSON("https://data.heroku.com/dataclips/ibzctyhepsfsgpiobxrltuhejxds.json",(e=>{e.values.forEach((e=>{let t,a;switch(e[0]){case 1:t="Prince George";break;case 2:t="Montgomery"}switch(e[1]){case!0:a="Accepted Invitations";break;case!1:a="Unaccepted Invitations"}t&&(this.orgs[t][a].newValue=e[2])})),this.queries["Accepted Invitations"]="loaded",this.queries["Unaccepted Invitations"]="loaded"})),getJSON("https://data.heroku.com/dataclips/vgblwvzhclatsdxzdbihypqulckq.json",(e=>{const t="Total Hours in Case Contacts";e.values.forEach((e=>{this.global[t].newValue=Math.round(e[0])})),this.queries[t]="loaded"})),getJSON("https://data.heroku.com/dataclips/ahvopfhogmvuccdzdnncmwlioidd.json",(e=>{e.values.forEach((e=>{let t;switch(e[0]){case 1:t="Prince George";break;case 2:t="Montgomery"}t&&(this.orgs[t]["Users Who Have Added Case Contacts in Last 2 Weeks"].newValue=e[1],this.orgs[t]["Case Contact Count in Last 2 Weeks"].newValue=e[2])})),this.queries["Users Who Have Added Case Contacts in Last 2 Weeks"]="loaded",this.queries["Case Contact Count in Last 2 Weeks"]="loaded"}))}});
