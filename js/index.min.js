function downloadToFile(e,t,s){const a=document.createElement("a"),o=new Blob([e],{type:s});a.href=URL.createObjectURL(o),a.download=t,a.click(),URL.revokeObjectURL(a.href)}function getJSON(e,t){const s=new XMLHttpRequest;s.onreadystatechange=function(){4===this.readyState&&200===this.status?t(JSON.parse(this.responseText)):4===this.readyState&&200!==this.status&&console.error(`Request to ${e} Failed`)},s.open("get",e,!0),s.send()}function makeDiff(e){const t={};for(label in e)t[label]=e[label].newValue-e[label].savedValue;return t}const app=new Vue({el:"#app",data:{orgs:[{name:"Prince George",metrics:{"Accepted Invitations":{savedValue:0,newValue:0},"Unaccepted Invitations":{savedValue:0,newValue:0},"Cases With Mandates":{savedValue:0,newValue:0},"Case Contact Count":{savedValue:0,newValue:0},"Case Contact Count in Last 2 Weeks":{savedValue:0,newValue:0},"Users Who Have Added Case Contacts in Last 2 Weeks":{savedValue:0,newValue:0},"Notification Count":{savedValue:0,newValue:0},"Volunteers Assigned to Supervisors":{savedValue:0,newValue:0}}},{name:"Montgomery",metrics:{"Accepted Invitations":{savedValue:0,newValue:0},"Unaccepted Invitations":{savedValue:0,newValue:0},"Cases With Mandates":{savedValue:0,newValue:0},"Case Contact Count":{savedValue:0,newValue:0},"Case Contact Count in Last 2 Weeks":{savedValue:0,newValue:0},"Users Who Have Added Case Contacts in Last 2 Weeks":{savedValue:0,newValue:0},"Notification Count":{savedValue:0,newValue:0},"Volunteers Assigned to Supervisors":{savedValue:0,newValue:0}}}],global:{"Total Hours in Case Contacts":{savedValue:0,newValue:0}},queries:{"Accepted Invitations":"unloaded","Unaccepted Invitations":"unloaded","Cases With Mandates":"unloaded","Case Contact Count":"unloaded","Case Contact Count in Last 2 Weeks":"unloaded","Users Who Have Added Case Contacts in Last 2 Weeks":"unloaded","Notification Count":"unloaded","Total Hours in Case Contacts":"unloaded","Volunteers AssignVed to Supervisors":"unloaded"}},computed:{backup:function(){const e=document.querySelector("textarea");return e.style.height=e.scrollHeight+"px",`localStorage.setItem('metrics', JSON.stringify(${JSON.stringify({orgs:this.orgs,global:this.global},null,2)}))`},diffs:function(){const e={};this.orgs.forEach((t=>{t&&(e[t.name]=makeDiff(t.metrics))}));const t=makeDiff(this.global);return{orgs:e,global:t}}},methods:{download:function(){downloadToFile(this.backup,"backup.js","text/plain")},save:function(){this.orgs.map((e=>e.metrics)).concat(this.global).forEach((e=>{for(metric in e)e[metric].savedValue=e[metric].newValue})),localStorage.setItem("metrics",JSON.stringify({orgs:this.orgs,global:this.global}))},updateMetric:function(e,t,s){"global"===t?this.global[e].newValue=Number.isInteger(s)?s:Math.round(s):this.orgs[t][e].newValue=Number.isInteger(s)?s:Math.round(s)}},mounted:function(){const e=JSON.parse(localStorage.getItem("metrics"));e&&(this.orgs.forEach(((t,s)=>{this.orgs[s]={name:t.name,metrics:Object.assign(this.orgs[s].metrics,e.orgs[s].metrics)}})),this.global=Object.assign(this.global,e.global)),getJSON("https://data.heroku.com/dataclips/idfolumrbaubogbmewdoeyahhdtj.json",(e=>{const t="Case Contact Count";e.values.forEach((e=>{this.orgs[e[0]-1].metrics[t].newValue=e[1]})),this.queries[t]="loaded"})),getJSON("https://data.heroku.com/dataclips/ymbdlyldhiiqcmsslbjfjdjmzwco.json",(e=>{const t="Volunteers Assigned to Supervisors";e.values.forEach((e=>{this.orgs[e[0]-1]&&(this.orgs[e[0]-1].metrics[t].newValue=e[1])})),this.queries[t]="loaded"})),getJSON("https://data.heroku.com/dataclips/xsikhducnqfdrmfcntvdhtehuuwp.json",(e=>{const t="Notification Count";e.values.forEach((e=>{this.orgs[e[0]-1]&&(this.orgs[e[0]-1].metrics[t].newValue=e[1])})),this.queries[t]="loaded"})),getJSON("https://data.heroku.com/dataclips/fairemyutljnkjgwldlaqtpecvvt.json",(e=>{const t="Cases With Mandates";e.values.forEach((e=>{this.orgs[e[0]-1]&&(this.orgs[e[0]-1].metrics[t].newValue=e[1])})),this.queries[t]="loaded"})),getJSON("https://data.heroku.com/dataclips/ibzctyhepsfsgpiobxrltuhejxds.json",(e=>{e.values.forEach((e=>{let t=e[1]?"Accepted Invitations":"Unaccepted Invitations";this.orgs[e[0]-1]&&(this.orgs[e[0]-1].metrics[t].newValue=e[2])})),this.queries["Accepted Invitations"]="loaded",this.queries["Unaccepted Invitations"]="loaded"})),getJSON("https://data.heroku.com/dataclips/vgblwvzhclatsdxzdbihypqulckq.json",(e=>{const t="Total Hours in Case Contacts";e.values.forEach((e=>{this.global[t].newValue=Math.round(e[0])})),this.queries[t]="loaded"})),getJSON("https://data.heroku.com/dataclips/ahvopfhogmvuccdzdnncmwlioidd.json",(e=>{e.values.forEach((e=>{this.orgs[e[0]-1]&&(this.orgs[e[0]-1].metrics["Users Who Have Added Case Contacts in Last 2 Weeks"].newValue=e[1],this.orgs[e[0]-1].metrics["Case Contact Count in Last 2 Weeks"].newValue=e[2])})),this.queries["Users Who Have Added Case Contacts in Last 2 Weeks"]="loaded",this.queries["Case Contact Count in Last 2 Weeks"]="loaded"}))}});
