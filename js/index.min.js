function downloadToFile(e,a,t){const s=document.createElement("a"),o=new Blob([e],{type:t});s.href=URL.createObjectURL(o),s.download=a,s.click(),URL.revokeObjectURL(s.href)}function getJSON(e,a){const t=new XMLHttpRequest;t.onreadystatechange=function(){4===this.readyState&&200===this.status?a(JSON.parse(this.responseText)):4===this.readyState&&200!==this.status&&console.error(`Request to ${e} Failed`)},t.open("get",e,!0),t.send()}function makeDiff(e){const a={};for(label in e)a[label]=e[label].newValue-e[label].savedValue;return a}const app=new Vue({el:"#app",data:{orgs:{"Prince George":{"Accepted Invitations":{savedValue:0,newValue:0},"Unaccepted Invitations":{savedValue:0,newValue:0},"Cases With Mandates":{savedValue:0,newValue:0},"Case Contact Count":{savedValue:0,newValue:0},"Case Contact Count in Last 2 Weeks":{savedValue:0,newValue:0},"Users Who Have Added Case Contacts in Last 2 Weeks":{savedValue:0,newValue:0},"Notification Count":{savedValue:0,newValue:0},"Volunteers Assigned to Supervisors":{savedValue:0,newValue:0}},Montgomery:{"Accepted Invitations":{savedValue:0,newValue:0},"Unaccepted Invitations":{savedValue:0,newValue:0},"Cases With Mandates":{savedValue:0,newValue:0},"Case Contact Count":{savedValue:0,newValue:0},"Case Contact Count in Last 2 Weeks":{savedValue:0,newValue:0},"Users Who Have Added Case Contacts in Last 2 Weeks":{savedValue:0,newValue:0},"Notification Count":{savedValue:0,newValue:0},"Volunteers Assigned to Supervisors":{savedValue:0,newValue:0}}},global:{"Total Hours in Case Contacts":{savedValue:0,newValue:0}}},computed:{backup:function(){const e=document.querySelector("textarea");return e.style.height=e.scrollHeight+"px",`localStorage.setItem('metrics', JSON.stringify(${JSON.stringify({orgs:this.orgs,global:this.global},null,2)}))`},diffs:function(){return{orgs:{"Prince George":makeDiff(this.orgs["Prince George"]),Montgomery:makeDiff(this.orgs.Montgomery)},global:makeDiff(this.global)}}},methods:{download:function(){downloadToFile(this.backup,"backup.js","text/plain")},save:function(){[this.orgs["Prince George"],this.orgs.Montgomery,this.global].forEach((e=>{for(stat in e)e[stat].savedValue=e[stat].newValue})),localStorage.setItem("metrics",JSON.stringify({orgs:this.orgs,global:this.global}))}},mounted:function(){const e=JSON.parse(localStorage.getItem("metrics"));e&&(this.orgs=e.orgs,this.global=e.global),getJSON("https://data.heroku.com/dataclips/idfolumrbaubogbmewdoeyahhdtj.json",(e=>{e.values.forEach((e=>{let a;switch(e[0]){case 1:a="Prince George";break;case 2:a="Montgomery"}this.orgs[a]["Case Contact Count"].newValue=e[1]})),console.log("Loaded Case Contact Counts")})),getJSON("https://data.heroku.com/dataclips/ymbdlyldhiiqcmsslbjfjdjmzwco.json",(e=>{e.values.forEach((e=>{let a;switch(e[0]){case 1:a="Prince George";break;case 2:a="Montgomery"}this.orgs[a]["Volunteers Assigned to Supervisors"].newValue=e[1]})),console.log("Loaded Volunteers Assigned to Supervisors Count")})),getJSON("https://data.heroku.com/dataclips/xsikhducnqfdrmfcntvdhtehuuwp.json",(e=>{e.values.forEach((e=>{let a;switch(e[0]){case 1:a="Prince George";break;case 2:a="Montgomery"}this.orgs[a]["Notification Count"].newValue=e[1]})),console.log("Loaded Notification Count")})),getJSON("https://data.heroku.com/dataclips/fairemyutljnkjgwldlaqtpecvvt.json",(e=>{e.values.forEach((e=>{let a;switch(e[0]){case 1:a="Prince George";break;case 2:a="Montgomery"}this.orgs[a]["Cases With Mandates"].newValue=e[1]})),console.log("Loaded Cases With Mandates Count")})),getJSON("https://data.heroku.com/dataclips/ibzctyhepsfsgpiobxrltuhejxds.json",(e=>{e.values.forEach((e=>{let a,t;switch(e[0]){case 1:a="Prince George";break;case 2:a="Montgomery"}switch(e[1]){case!0:t="Accepted Invitations";break;case!1:t="Unaccepted Invitations"}this.orgs[a][t].newValue=e[2]})),console.log("Loaded Accepted/Unaccepted Invitations")})),getJSON("https://data.heroku.com/dataclips/vgblwvzhclatsdxzdbihypqulckq.json",(e=>{e.values.forEach((e=>{this.global["Total Hours in Case Contacts"].newValue=Math.round(e[0])})),console.log("Loaded Total Hours in Case Contacts")})),getJSON("https://data.heroku.com/dataclips/ahvopfhogmvuccdzdnncmwlioidd.json",(e=>{e.values.forEach((e=>{let a;switch(e[0]){case 1:a="Prince George";break;case 2:a="Montgomery"}this.orgs[a]["Users Who Have Added Case Contacts in Last 2 Weeks"].newValue=e[1],this.orgs[a]["Case Contact Count in Last 2 Weeks"].newValue=e[2]})),console.log("Loaded Users Who Have Added Case Contacts in Last 2 Weeks"),console.log("Loaded Case Contact Count in Last 2 Weeks")}))}});
